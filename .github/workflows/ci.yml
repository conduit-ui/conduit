name: CI

on:
  push:
    branches: [ master, feature/* ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.2, 8.3]
    
    name: PHP ${{ matrix.php-version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: xdebug
        
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-composer-
          
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction
      
    - name: Create SQLite database  
      run: |
        mkdir -p database
        touch database/database.sqlite
        
    - name: Copy environment file
      run: |
        cp .env.example .env || echo "APP_ENV=testing" > .env
        echo "DB_CONNECTION=sqlite" >> .env
        echo "DB_DATABASE=database/database.sqlite" >> .env
      
    - name: Debug environment
      run: |
        echo "Current directory:"
        pwd
        echo "Vendor bin contents:"
        ls -la vendor/bin/ || echo "vendor/bin not found"
        echo "Checking for pest:"
        which pest || echo "pest not in PATH"
        vendor/bin/pest --version || echo "pest binary failed"
        
    - name: Run tests
      run: vendor/bin/pest --coverage --min=60
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.php-version == '8.3'
      
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.3-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.3-composer-
          
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction
      
    - name: Run PHP CS Fixer (Laravel Pint)
      run: ./vendor/bin/pint --test
      
    - name: Run PHPStan
      run: ./vendor/bin/phpstan analyse --error-format=github
      if: false # Disable until PHPStan is configured
      
  security:
    runs-on: ubuntu-latest
    name: Security
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.3-composer-${{ hashFiles('**/composer.lock') }}
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction
      
    - name: Security Audit
      run: composer audit
      
    - name: Check for known security vulnerabilities
      uses: symfonycorp/security-checker-action@v5